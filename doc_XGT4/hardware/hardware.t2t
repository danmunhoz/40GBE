NetSume - Hardware Interface - XGETH_TESTER
%%date(%c)

%!target: html
%!options: --toc --toc-level 4
%!options: --style ../style.css
%!encoding: utf-8

%!postproc(html): '{([^}]*)}' '<\1>'
%%%%%%%%%%%%%%%%%%%%%%
= Hardware interface =
%%%%%%%%%%%%%%%%%%%%%%
%------------------------
+ General view of the system +
%------------------------

This document presents the **XGETH_TESTER**, a module capable of executing the tests described by the RFC2544. The **XGETH_TESTER** is capable of evaluating a network component (UUT) such as a switch or a router. Currently, this component can evaluate the network in respect to the maximum throughput, network latency, frame loss rate, ability to process back-to-back frames and the speed which a DUT can recover from an overload condition.

The **XGETH_TESTER** works by sending a traffic made of UDP echo packets, which is configured externally using a script written in C programming language. There are two ways to connect to the **XGETH_TESTER**. The first one (Figure 1) consists of a connection through optical loopback fiber between the transmitter and receiver. The second way (Figure 2) is by connecting the **XGETH_TESTER** to one 10GbE port of a switch (used model: DM4100).  In this configuration, the data traffic is generated by the tester, received by the switch through the port 25 and returns to the tester.

{center}[images/loopback_pci_config.png]{/center}
{center}Figure 1 - Loopback test configuration.{/center}

%------------------------
+ Main hardware components +
%------------------------

Figure 3 shows the XGETH_TESTER's structure, which presents the main blocks. Note that the left interface is the local interface where the user sends and requests data from the **XGETH_TESTER** using a serial connection. All components operate at 156.25MHz except the PCS module, which operates at 161.13MHz. The XGETH_TESTER is prototyped on a Xilinx Virtex-7 NetFPGA-SUME (XC7V690T FFG1761-3).

{center}{img width=1000 src="images/block_diagram_pci.png"}{/center}
{center}Figure 3 - XGETH_TESTER's general structure.{/center}

++ PCIe Interface ++
The PCIe interface receives a packet from the host PC and separates what is data and address. The module takes the 2 most significant bits from address to indicates the SFP number. This module is connected to the uPC interface to communicate with the Traffic Injector. 

++ UPC Interface ++
This module acts as a register bank where the test parameters and results are stored. The test initialization is also handled by this component when the //STATUS// register is written.

++ Traffic Injector ++
Traffic Injector: Control interface testing according to RFC2544. This module performs the tests according to the parameters set in the register bank of UPC Interface module. This module controls the generation and reception of ECHO packets, and performs the collection of necessary data, such as number of packets received and timestamp send and received in a packet.

++ Echo Generator ++
This module generates ECHO packets sending payload with random data or with a timestamp that can be identified on the receiver. The packets are generated according to the size specified in the UPC register bank. This module is connected directly to the MAC module.

++ Echo Receiver ++
This module receive ECHO packets and indicates the Traffic Injector module when the packet received is valid.
