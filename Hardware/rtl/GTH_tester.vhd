------------------------------------------------------------------------------
--   ____  ____
--  /   /\/   /
-- /___/  \  /    Vendor: Xilinx
-- \   \   \/     Version : 3.5
--  \   \         Application : 7 Series FPGAs Transceivers Wizard
--  /   /         Filename : gth_exdes.vhd
-- /___/   /\
-- \   \  /  \
--  \___\/\___\
--
--
-- Module GTH_exdes
-- Generated by Xilinx 7 Series FPGAs Transceivers Wizard
--
--
-- (c) Copyright 2010-2012 Xilinx, Inc. All rights reserved.
--
-- This file contains confidential and proprietary information
-- of Xilinx, Inc. and is protected under U.S. and
-- international copyright and other intellectual property
-- laws.
--
-- DISCLAIMER
-- This disclaimer is not a license and does not grant any
-- rights to the materials distributed herewith. Except as
-- otherwise provided in a valid license issued to you by
-- Xilinx, and to the maximum extent permitted by applicable
-- law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
-- WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
-- AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
-- BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
-- INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
-- (2) Xilinx shall not be liable (whether in contract or tort,
-- including negligence, or under any other theory of
-- liability) for any loss or damage of any kind or nature
-- related to, arising under or in connection with these
-- materials, including for any direct, or any indirect,
-- special, incidental, or consequential loss or damage
-- (including loss of data, profits, goodwill, or any type of
-- loss or damage suffered as a result of any action brought
-- by a third party) even if such damage or loss was
-- reasonably foreseeable or Xilinx had been advised of the
-- possibility of the same.
--
-- CRITICAL APPLICATIONS
-- Xilinx products are not designed or intended to be fail-
-- safe, or for use in any application requiring fail-safe
-- performance, such as life-support or safety devices or
-- systems, Class III medical devices, nuclear facilities,
-- applications related to the deployment of airbags, or any
-- other applications that could lead to death, personal
-- injury, or severe property or environmental damage
-- (individually and collectively, "Critical
-- Applications"). Customer assumes the sole risk and
-- liability of any use of Xilinx products in Critical
-- Applications, subject only to applicable laws and
-- regulations governing limitations on product liability.
--
-- THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
-- PART OF THIS FILE AT ALL TIMES.


library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;

library xil_defaultlib;
    use xil_defaultlib.common_pkg.all;

--***********************************Entity Declaration************************



entity GTH_tester is

    generic (

        enable_simulation                   : boolean   := false; -- Enable simulation mode when asserted true.
        EXAMPLE_SIM_GTRESET_SPEEDUP         : string    := "TRUE";    -- simulation setting for GT SecureIP model
        STABLE_CLOCK_PERIOD                 : integer   := 10;
        REG_SIZE                            : integer   := 25
    );
    port
    (
        -- Input Clocks
        Q8_CLK0_GTREFCLK_PAD_N_IN               : in   std_logic;                       -- 156.25 MHz SFP+ Clock N
        Q8_CLK0_GTREFCLK_PAD_P_IN               : in   std_logic;                       -- 156.25 MHz SFP+ Clock P
        SYSCLK_IN_N                             : in   std_logic;                       -- 200.00 MHz System Clock N
        SYSCLK_IN_P                             : in   std_logic;                       -- 200.00 MHz System Clock P

        -- I2C DATA
        I2C_FPGA_SCL                            : inout std_logic;                      -- I2C Clock (SCL)
        I2C_FPGA_SDA                            : inout std_logic;                      -- I2C Data  (SDA)

       -- SFP+ LEDS
        ETH1_LED                                : out std_logic_vector(1 downto 0);     -- SFP 1 LEDS (Green 0, Yellow 1)
        ETH2_LED                                : out std_logic_vector(1 downto 0);     -- SFP 2 LEDS (Green 0, Yellow 1)
        ETH3_LED                                : out std_logic_vector(1 downto 0);     -- SFP 3 LEDS (Green 0, Yellow 1)
        ETH4_LED                                : out std_logic_vector(1 downto 0);     -- SFP 4 LEDS (Green 0, Yellow 1)

        -- Canais SFP+ DATA
        -- SFP1
        ETH1_RX_P                               : in   std_logic;                       -- SFP1 RX P
        ETH1_RX_N                               : in   std_logic;                       -- SFP1 RX N
        ETH1_TX_P                               : out  std_logic;                       -- SFP1 TX P
        ETH1_TX_N                               : out  std_logic;                       -- SFP1 TX N
        -- SFP2
        ETH2_RX_P                               : in   std_logic;                       -- SFP2 RX P
        ETH2_RX_N                               : in   std_logic;                       -- SFP2 RX N
        ETH2_TX_P                               : out  std_logic;                       -- SFP2 TX P
        ETH2_TX_N                               : out  std_logic;                       -- SFP2 TX N
        -- SFP32
        ETH3_RX_P                               : in   std_logic;                       -- SFP3 RX P
        ETH3_RX_N                               : in   std_logic;                       -- SFP3 RX N
        ETH3_TX_P                               : out  std_logic;                       -- SFP3 TX P
        ETH3_TX_N                               : out  std_logic;                       -- SFP3 TX N
        -- SFP44
        ETH4_RX_P                               : in   std_logic;                       -- SFP4 RX P
        ETH4_RX_N                               : in   std_logic;                       -- SFP4 RX N
        ETH4_TX_P                               : out  std_logic;                       -- SFP4 TX P
        ETH4_TX_N                               : out  std_logic;                       -- SFP4 TX N

        -- SFP Control Pins
        -- SFP1 Control
        ETH1_MOD_DETECT                         : in  std_logic;                        -- SFP 1 Module Detected
        ETH1_RX_LOS                             : in  std_logic;                        -- SFP 1 RX Signal Los
        ETH1_TX_FAULT                           : in  std_logic;                        -- SFP 1 Tx Fault
        ETH1_RS                                 : out  std_logic_vector(1 downto 0);    -- SFP 1 Speed Configuration
        ETH1_TX_DISABLE                         : out  std_logic;                       -- SFP 1 Disable

        -- SFP2 Control
        ETH2_MOD_DETECT                         : in  std_logic;                        -- SFP 2 Module Detected
        ETH2_RX_LOS                             : in  std_logic;                        -- SFP 2 RX Signal Los
        ETH2_TX_FAULT                           : in  std_logic;                        -- SFP 2 Tx Fault
        ETH2_RS                                 : out  std_logic_vector(1 downto 0);    -- SFP 2 Speed Configuration
        ETH2_TX_DISABLE                         : out  std_logic;                       -- SFP 2 Disable

        -- SFP3 Control
        ETH3_MOD_DETECT                         : in  std_logic;                        -- SFP 3 Module Detected
        ETH3_RX_LOS                             : in  std_logic;                        -- SFP 3 RX Signal Los
        ETH3_TX_FAULT                           : in  std_logic;                        -- SFP 3 Tx Fault
        ETH3_RS                                 : out  std_logic_vector(1 downto 0);    -- SFP 3 Speed Configuration
        ETH3_TX_DISABLE                         : out  std_logic;                       -- SFP 3 Disable

        -- SFP4 Control
        ETH4_MOD_DETECT                         : in  std_logic;                        -- SFP 4 Module Detected
        ETH4_RX_LOS                             : in  std_logic;                        -- SFP 4 RX Signal Los
        ETH4_TX_FAULT                           : in  std_logic;                        -- SFP 4 Tx Fault
        ETH4_RS                                 : out  std_logic_vector(1 downto 0);    -- SFP 4 Speed Configuration
        ETH4_TX_DISABLE                         : out  std_logic;                       -- SFP 4 Disable

        -- UART
        UART_RXD_OUT                            : out std_logic;                       -- UART RX Data -- Data to Host Receiver
        UART_TXD_IN                             : in std_logic;                        -- UART TX Data -- Data from Host Transmitter

        -- GPIOs
        BTN                                     : in  std_logic_vector(1 downto 0);     -- On Board Buttons -- BTN(0) -> Global Reset

        -- Resets
        I2C_MUX_RESET                           : out std_logic;                        -- MUX I2C Reset
        SFP_CLK_RST                             : out std_logic;                         -- SI5324 Chip for SFP Clock Gen Reset

        pci_exp_txp                             : out std_logic_vector(7 downto 0);
        pci_exp_txn                             : out std_logic_vector(7 downto 0);
        pci_exp_rxp                             : in std_logic_vector(7 downto 0);
        pci_exp_rxn                             : in std_logic_vector(7 downto 0);
        sys_clk_p_pcie                          : in std_logic;
        sys_clk_n_pcie                          : in std_logic;
        sys_rst_n_pcie                          : in std_logic

    );

end GTH_tester;

architecture top of GTH_tester is
component gtwizard_0_support
    generic
    (
        -- Simulation attributes
        EXAMPLE_SIM_GTRESET_SPEEDUP    : string    := "FALSE";    -- Set to TRUE to speed up sim reset
        STABLE_CLOCK_PERIOD            : integer   := 10
    );
    port
    (
        SOFT_RESET_TX_IN                        : in   std_logic;
        SOFT_RESET_RX_IN                        : in   std_logic;
        DONT_RESET_ON_DATA_ERROR_IN             : in   std_logic;
        Q8_CLK0_GTREFCLK_PAD_N_IN               : in   std_logic;
        Q8_CLK0_GTREFCLK_PAD_P_IN               : in   std_logic;

        Q8_CLK0_GTREFCLK_OUT                    : out  std_logic;
        GT0_TX_FSM_RESET_DONE_OUT               : out  std_logic;
        GT0_RX_FSM_RESET_DONE_OUT               : out  std_logic;
        GT0_DATA_VALID_IN                       : in   std_logic;
        GT0_TX_MMCM_LOCK_OUT                    : out  std_logic;
        GT0_RX_MMCM_LOCK_OUT                    : out  std_logic;
        GT1_TX_FSM_RESET_DONE_OUT               : out  std_logic;
        GT1_RX_FSM_RESET_DONE_OUT               : out  std_logic;
        GT1_DATA_VALID_IN                       : in   std_logic;
        GT1_TX_MMCM_LOCK_OUT                    : out  std_logic;
        GT1_RX_MMCM_LOCK_OUT                    : out  std_logic;
        GT2_TX_FSM_RESET_DONE_OUT               : out  std_logic;
        GT2_RX_FSM_RESET_DONE_OUT               : out  std_logic;
        GT2_DATA_VALID_IN                       : in   std_logic;
        GT2_TX_MMCM_LOCK_OUT                    : out  std_logic;
        GT2_RX_MMCM_LOCK_OUT                    : out  std_logic;
        GT3_TX_FSM_RESET_DONE_OUT               : out  std_logic;
        GT3_RX_FSM_RESET_DONE_OUT               : out  std_logic;
        GT3_DATA_VALID_IN                       : in   std_logic;
        GT3_TX_MMCM_LOCK_OUT                    : out  std_logic;
        GT3_RX_MMCM_LOCK_OUT                    : out  std_logic;

        GT0_TXUSRCLK_OUT                        : out  std_logic;
        GT0_TXUSRCLK2_OUT                       : out  std_logic;
        GT0_RXUSRCLK_OUT                        : out  std_logic;
        GT0_RXUSRCLK2_OUT                       : out  std_logic;

        GT1_TXUSRCLK_OUT                        : out  std_logic;
        GT1_TXUSRCLK2_OUT                       : out  std_logic;
        GT1_RXUSRCLK_OUT                        : out  std_logic;
        GT1_RXUSRCLK2_OUT                       : out  std_logic;

        GT2_TXUSRCLK_OUT                        : out  std_logic;
        GT2_TXUSRCLK2_OUT                       : out  std_logic;
        GT2_RXUSRCLK_OUT                        : out  std_logic;
        GT2_RXUSRCLK2_OUT                       : out  std_logic;

        GT3_TXUSRCLK_OUT                        : out  std_logic;
        GT3_TXUSRCLK2_OUT                       : out  std_logic;
        GT3_RXUSRCLK_OUT                        : out  std_logic;
        GT3_RXUSRCLK2_OUT                       : out  std_logic;
        --_________________________________________________________________________
        --_________________________________________________________________________
        --GT0  (X1Y36)
        --____________________________CHANNEL PORTS________________________________
        ------------------------------- Loopback Ports -----------------------------
        gt0_loopback_in                         : in   std_logic_vector(2 downto 0);
        --------------------- RX Initialization and Reset Ports --------------------
        gt0_eyescanreset_in                     : in   std_logic;
        gt0_rxuserrdy_in                        : in   std_logic;
        -------------------------- RX Margin Analysis Ports ------------------------
        gt0_eyescandataerror_out                : out  std_logic;
        gt0_eyescantrigger_in                   : in   std_logic;
        ------------------- Receive Ports - Digital Monitor Ports ------------------
        gt0_dmonitorout_out                     : out  std_logic_vector(14 downto 0);
        ------------------ Receive Ports - FPGA RX interface Ports -----------------
        gt0_rxdata_out                          : out  std_logic_vector(63 downto 0);
        ------------------- Receive Ports - Pattern Checker Ports ------------------
        gt0_rxprbserr_out                       : out  std_logic;
        gt0_rxprbssel_in                        : in   std_logic_vector(2 downto 0);
        ------------------- Receive Ports - Pattern Checker ports ------------------
        gt0_rxprbscntreset_in                   : in   std_logic;
        ------------------------ Receive Ports - RX AFE Ports ----------------------
        gt0_gthrxn_in                           : in   std_logic;
        --------------------- Receive Ports - RX Equalizer Ports -------------------
        gt0_rxmonitorout_out                    : out  std_logic_vector(6 downto 0);
        gt0_rxmonitorsel_in                     : in   std_logic_vector(1 downto 0);
        ---------------------- Receive Ports - RX Gearbox Ports --------------------
        gt0_rxdatavalid_out                     : out  std_logic;
        gt0_rxheader_out                        : out  std_logic_vector(1 downto 0);
        gt0_rxheadervalid_out                   : out  std_logic;
        --------------------- Receive Ports - RX Gearbox Ports  --------------------
        gt0_rxgearboxslip_in                    : in   std_logic;
        ------------- Receive Ports - RX Initialization and Reset Ports ------------
        gt0_gtrxreset_in                        : in   std_logic;
        ------------------------ Receive Ports -RX AFE Ports -----------------------
        gt0_gthrxp_in                           : in   std_logic;
        -------------- Receive Ports -RX Initialization and Reset Ports ------------
        gt0_rxresetdone_out                     : out  std_logic;
        --------------------- TX Initialization and Reset Ports --------------------
        gt0_gttxreset_in                        : in   std_logic;
        gt0_txuserrdy_in                        : in   std_logic;
        -------------- Transmit Ports - 64b66b and 64b67b Gearbox Ports ------------
        gt0_txheader_in                         : in   std_logic_vector(1 downto 0);
        ------------------ Transmit Ports - Pattern Generator Ports ----------------
        gt0_txprbsforceerr_in                   : in   std_logic;
        ------------------ Transmit Ports - TX Data Path interface -----------------
        gt0_txdata_in                           : in   std_logic_vector(63 downto 0);
        ---------------- Transmit Ports - TX Driver and OOB signaling --------------
        gt0_gthtxn_out                          : out  std_logic;
        gt0_gthtxp_out                          : out  std_logic;
        ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        gt0_txoutclkfabric_out                  : out  std_logic;
        gt0_txoutclkpcs_out                     : out  std_logic;
        --------------------- Transmit Ports - TX Gearbox Ports --------------------
        gt0_txsequence_in                       : in   std_logic_vector(6 downto 0);
        ------------- Transmit Ports - TX Initialization and Reset Ports -----------
        gt0_txresetdone_out                     : out  std_logic;
        ------------------ Transmit Ports - pattern Generator Ports ----------------
        gt0_txprbssel_in                        : in   std_logic_vector(2 downto 0);

        --_________________________________________________________________________
        --_________________________________________________________________________
        --GT1  (X1Y37)
        --____________________________CHANNEL PORTS________________________________
        ------------------------------- Loopback Ports -----------------------------
        gt1_loopback_in                         : in   std_logic_vector(2 downto 0);
        --------------------- RX Initialization and Reset Ports --------------------
        gt1_eyescanreset_in                     : in   std_logic;
        gt1_rxuserrdy_in                        : in   std_logic;
        -------------------------- RX Margin Analysis Ports ------------------------
        gt1_eyescandataerror_out                : out  std_logic;
        gt1_eyescantrigger_in                   : in   std_logic;
        ------------------- Receive Ports - Digital Monitor Ports ------------------
        gt1_dmonitorout_out                     : out  std_logic_vector(14 downto 0);
        ------------------ Receive Ports - FPGA RX interface Ports -----------------
        gt1_rxdata_out                          : out  std_logic_vector(63 downto 0);
        ------------------- Receive Ports - Pattern Checker Ports ------------------
        gt1_rxprbserr_out                       : out  std_logic;
        gt1_rxprbssel_in                        : in   std_logic_vector(2 downto 0);
        ------------------- Receive Ports - Pattern Checker ports ------------------
        gt1_rxprbscntreset_in                   : in   std_logic;
        ------------------------ Receive Ports - RX AFE Ports ----------------------
        gt1_gthrxn_in                           : in   std_logic;
        --------------------- Receive Ports - RX Equalizer Ports -------------------
        gt1_rxmonitorout_out                    : out  std_logic_vector(6 downto 0);
        gt1_rxmonitorsel_in                     : in   std_logic_vector(1 downto 0);
        ---------------------- Receive Ports - RX Gearbox Ports --------------------
        gt1_rxdatavalid_out                     : out  std_logic;
        gt1_rxheader_out                        : out  std_logic_vector(1 downto 0);
        gt1_rxheadervalid_out                   : out  std_logic;
        --------------------- Receive Ports - RX Gearbox Ports  --------------------
        gt1_rxgearboxslip_in                    : in   std_logic;
        ------------- Receive Ports - RX Initialization and Reset Ports ------------
        gt1_gtrxreset_in                        : in   std_logic;
        ------------------------ Receive Ports -RX AFE Ports -----------------------
        gt1_gthrxp_in                           : in   std_logic;
        -------------- Receive Ports -RX Initialization and Reset Ports ------------
        gt1_rxresetdone_out                     : out  std_logic;
        --------------------- TX Initialization and Reset Ports --------------------
        gt1_gttxreset_in                        : in   std_logic;
        gt1_txuserrdy_in                        : in   std_logic;
        -------------- Transmit Ports - 64b66b and 64b67b Gearbox Ports ------------
        gt1_txheader_in                         : in   std_logic_vector(1 downto 0);
        ------------------ Transmit Ports - Pattern Generator Ports ----------------
        gt1_txprbsforceerr_in                   : in   std_logic;
        ------------------ Transmit Ports - TX Data Path interface -----------------
        gt1_txdata_in                           : in   std_logic_vector(63 downto 0);
        ---------------- Transmit Ports - TX Driver and OOB signaling --------------
        gt1_gthtxn_out                          : out  std_logic;
        gt1_gthtxp_out                          : out  std_logic;
        ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        gt1_txoutclkfabric_out                  : out  std_logic;
        gt1_txoutclkpcs_out                     : out  std_logic;
        --------------------- Transmit Ports - TX Gearbox Ports --------------------
        gt1_txsequence_in                       : in   std_logic_vector(6 downto 0);
        ------------- Transmit Ports - TX Initialization and Reset Ports -----------
        gt1_txresetdone_out                     : out  std_logic;
        ------------------ Transmit Ports - pattern Generator Ports ----------------
        gt1_txprbssel_in                        : in   std_logic_vector(2 downto 0);

           --_________________________________________________________________________
        --_________________________________________________________________________
        --GT3  (X1Y38)
        --____________________________CHANNEL PORTS________________________________
        ------------------------------- Loopback Ports -----------------------------
        gt2_loopback_in                         : in   std_logic_vector(2 downto 0);
        --------------------- RX Initialization and Reset Ports --------------------
        gt2_eyescanreset_in                     : in   std_logic;
        gt2_rxuserrdy_in                        : in   std_logic;
        -------------------------- RX Margin Analysis Ports ------------------------
        gt2_eyescandataerror_out                : out  std_logic;
        gt2_eyescantrigger_in                   : in   std_logic;
        ------------------- Receive Ports - Digital Monitor Ports ------------------
        gt2_dmonitorout_out                     : out  std_logic_vector(14 downto 0);
        ------------------ Receive Ports - FPGA RX interface Ports -----------------
        gt2_rxdata_out                          : out  std_logic_vector(63 downto 0);
        ------------------- Receive Ports - Pattern Checker Ports ------------------
        gt2_rxprbserr_out                       : out  std_logic;
        gt2_rxprbssel_in                        : in   std_logic_vector(2 downto 0);
        ------------------- Receive Ports - Pattern Checker ports ------------------
        gt2_rxprbscntreset_in                   : in   std_logic;
        ------------------------ Receive Ports - RX AFE Ports ----------------------
        gt2_gthrxn_in                           : in   std_logic;
        --------------------- Receive Ports - RX Equalizer Ports -------------------
        gt2_rxmonitorout_out                    : out  std_logic_vector(6 downto 0);
        gt2_rxmonitorsel_in                     : in   std_logic_vector(1 downto 0);
        ---------------------- Receive Ports - RX Gearbox Ports --------------------
        gt2_rxdatavalid_out                     : out  std_logic;
        gt2_rxheader_out                        : out  std_logic_vector(1 downto 0);
        gt2_rxheadervalid_out                   : out  std_logic;
        --------------------- Receive Ports - RX Gearbox Ports  --------------------
        gt2_rxgearboxslip_in                    : in   std_logic;
        ------------- Receive Ports - RX Initialization and Reset Ports ------------
        gt2_gtrxreset_in                        : in   std_logic;
        ------------------------ Receive Ports -RX AFE Ports -----------------------
        gt2_gthrxp_in                           : in   std_logic;
        -------------- Receive Ports -RX Initialization and Reset Ports ------------
        gt2_rxresetdone_out                     : out  std_logic;
        --------------------- TX Initialization and Reset Ports --------------------
        gt2_gttxreset_in                        : in   std_logic;
        gt2_txuserrdy_in                        : in   std_logic;
        -------------- Transmit Ports - 64b66b and 64b67b Gearbox Ports ------------
        gt2_txheader_in                         : in   std_logic_vector(1 downto 0);
        ------------------ Transmit Ports - Pattern Generator Ports ----------------
        gt2_txprbsforceerr_in                   : in   std_logic;
        ------------------ Transmit Ports - TX Data Path interface -----------------
        gt2_txdata_in                           : in   std_logic_vector(63 downto 0);
        ---------------- Transmit Ports - TX Driver and OOB signaling --------------
        gt2_gthtxn_out                          : out  std_logic;
        gt2_gthtxp_out                          : out  std_logic;
        ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        gt2_txoutclkfabric_out                  : out  std_logic;
        gt2_txoutclkpcs_out                     : out  std_logic;
        --------------------- Transmit Ports - TX Gearbox Ports --------------------
        gt2_txsequence_in                       : in   std_logic_vector(6 downto 0);
        ------------- Transmit Ports - TX Initialization and Reset Ports -----------
        gt2_txresetdone_out                     : out  std_logic;
        ------------------ Transmit Ports - pattern Generator Ports ----------------
        gt2_txprbssel_in                        : in   std_logic_vector(2 downto 0);
        --_________________________________________________________________________
        --_________________________________________________________________________
        --GT3  (X1Y39)
        --____________________________CHANNEL PORTS________________________________
        ------------------------------- Loopback Ports -----------------------------
        gt3_loopback_in                         : in   std_logic_vector(2 downto 0);
        --------------------- RX Initialization and Reset Ports --------------------
        gt3_eyescanreset_in                     : in   std_logic;
        gt3_rxuserrdy_in                        : in   std_logic;
        -------------------------- RX Margin Analysis Ports ------------------------
        gt3_eyescandataerror_out                : out  std_logic;
        gt3_eyescantrigger_in                   : in   std_logic;
        ------------------- Receive Ports - Digital Monitor Ports ------------------
        gt3_dmonitorout_out                     : out  std_logic_vector(14 downto 0);
        ------------------ Receive Ports - FPGA RX interface Ports -----------------
        gt3_rxdata_out                          : out  std_logic_vector(63 downto 0);
        ------------------- Receive Ports - Pattern Checker Ports ------------------
        gt3_rxprbserr_out                       : out  std_logic;
        gt3_rxprbssel_in                        : in   std_logic_vector(2 downto 0);
        ------------------- Receive Ports - Pattern Checker ports ------------------
        gt3_rxprbscntreset_in                   : in   std_logic;
        ------------------------ Receive Ports - RX AFE Ports ----------------------
        gt3_gthrxn_in                           : in   std_logic;
        --------------------- Receive Ports - RX Equalizer Ports -------------------
        gt3_rxmonitorout_out                    : out  std_logic_vector(6 downto 0);
        gt3_rxmonitorsel_in                     : in   std_logic_vector(1 downto 0);
        ---------------------- Receive Ports - RX Gearbox Ports --------------------
        gt3_rxdatavalid_out                     : out  std_logic;
        gt3_rxheader_out                        : out  std_logic_vector(1 downto 0);
        gt3_rxheadervalid_out                   : out  std_logic;
        --------------------- Receive Ports - RX Gearbox Ports  --------------------
        gt3_rxgearboxslip_in                    : in   std_logic;
        ------------- Receive Ports - RX Initialization and Reset Ports ------------
        gt3_gtrxreset_in                        : in   std_logic;
        ------------------------ Receive Ports -RX AFE Ports -----------------------
        gt3_gthrxp_in                           : in   std_logic;
        -------------- Receive Ports -RX Initialization and Reset Ports ------------
        gt3_rxresetdone_out                     : out  std_logic;
        --------------------- TX Initialization and Reset Ports --------------------
        gt3_gttxreset_in                        : in   std_logic;
        gt3_txuserrdy_in                        : in   std_logic;
        -------------- Transmit Ports - 64b66b and 64b67b Gearbox Ports ------------
        gt3_txheader_in                         : in   std_logic_vector(1 downto 0);
        ------------------ Transmit Ports - Pattern Generator Ports ----------------
        gt3_txprbsforceerr_in                   : in   std_logic;
        ------------------ Transmit Ports - TX Data Path interface -----------------
        gt3_txdata_in                           : in   std_logic_vector(63 downto 0);
        ---------------- Transmit Ports - TX Driver and OOB signaling --------------
        gt3_gthtxn_out                          : out  std_logic;
        gt3_gthtxp_out                          : out  std_logic;
        ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        gt3_txoutclkfabric_out                  : out  std_logic;
        gt3_txoutclkpcs_out                     : out  std_logic;
        --------------------- Transmit Ports - TX Gearbox Ports --------------------
        gt3_txsequence_in                       : in   std_logic_vector(6 downto 0);
        ------------- Transmit Ports - TX Initialization and Reset Ports -----------
        gt3_txresetdone_out                     : out  std_logic;
        ------------------ Transmit Ports - pattern Generator Ports ----------------
        gt3_txprbssel_in                        : in   std_logic_vector(2 downto 0);


        --____________________________COMMON PORTS________________________________
        GT0_QPLLLOCK_OUT : out std_logic;
        GT0_QPLLREFCLKLOST_OUT  : out std_logic;
        GT0_QPLLOUTCLK_OUT  : out std_logic;
        GT0_QPLLOUTREFCLK_OUT : out std_logic;
        sysclk_in : in std_logic
    );
    end component;

    component xilinx_pcie_3_0_7vx_ep
    port(
         pci_exp_txp : out std_logic_vector(7 downto 0);
         pci_exp_txn : out std_logic_vector(7 downto 0);
         pci_exp_rxp : in std_logic_vector(7 downto 0);
         pci_exp_rxn : in std_logic_vector(7 downto 0);
         sys_clk_p   : in   std_logic;
         sys_clk_n   : in   std_logic;
         sys_rst_n   : in   std_logic;

         rd_addr_out: out std_logic_vector(8 downto 0);
         rd_data_raw_o_in: in std_logic_vector(31 downto 0);
         wr_addr_inc_out: out std_logic_vector(8 downto 0);
         post_wr_data_out: out std_logic_vector(31 downto 0);
         write_en_out: out std_logic;
         user_clk_out: out std_logic
    );
    end component;

    component xgeth_tester
    port(
        -- Clocks
        clk_156             : in std_logic;
        clk_250             : in std_logic;
        tx_clk_161_13       : in std_logic;
        rx_clk_161_13       : in std_logic;
        clk_xgmii_rx        : in std_logic;
        clk_xgmii_tx        : in std_logic;

        -- Resets
        reset_tx_n          : in std_logic;
        reset_rx_n          : in std_logic;
        reset_tx_done       : in std_logic;
        reset_rx_done       : in std_logic;

        async_reset_n       : in std_logic;

        linkstatus          : out std_logic;
        eth_rx_los          : in std_logic;
        rx_data_in          : in  std_logic_vector(63 downto 0); --phy_rx_dout
        rx_header_in        : in  std_logic_vector(1 downto 0);
        rx_data_valid_in    : in  std_logic;
        rx_header_valid_in  : in  std_logic;
        tx_data_out         : out  std_logic_vector(63 downto 0); --phy_tx_din
        tx_header_out       : out  std_logic_vector(1 downto 0);
        tx_sequence_out     : out  std_logic_vector(6 downto 0);
        rxgearboxslip_out   : out  std_logic;


         -- uPC interface
        xgeth_waddr         : in std_logic_vector(6 downto 0);
        xgeth_wdata         : in std_logic_vector(31 downto 0);

        xgeth_raddr         : in std_logic_vector(6 downto 0);
        xgeth_rdata         : out std_logic_vector(31 downto 0);

        xgeth_wen           : in std_logic;

        on_frame_sent             : out std_logic;
        on_frame_received        : out std_logic;

        verify_system_rec   : out std_logic
    );
    end component;

        component blink_driver
        generic (
            REG_SIZE                 : integer   := 10
        );
        port(
            clk  : in  std_logic;
            blink  : out  std_logic;
            reset  : in  std_logic
        );
        end component;

        component led_driver
        port(
            clk  : in  std_logic;
            blink  : in  std_logic;
            has_link  : in  std_logic;
            on_frame_sent : in std_logic;
            on_frame_received : in std_logic;
            led : out std_logic_vector(1 downto 0)
        );
        end component;

--**************************** Wire Declarations ******************************
    -------------------------- GT Wrapper Wires ------------------------------
    --________________________________________________________________________
    --________________________________________________________________________
    --GT0  (X1Y36)

    ------------------------------- Loopback Ports -----------------------------
    signal  gt0_loopback_i                  : std_logic_vector(2 downto 0);
    --------------------- RX Initialization and Reset Ports --------------------
    signal  gt0_eyescanreset_i              : std_logic;
    signal  gt0_rxuserrdy_i                 : std_logic;
    -------------------------- RX Margin Analysis Ports ------------------------
    signal  gt0_eyescandataerror_i          : std_logic;
    signal  gt0_eyescantrigger_i            : std_logic;
    ------------------- Receive Ports - Digital Monitor Ports ------------------
    signal  gt0_dmonitorout_i               : std_logic_vector(14 downto 0);
    ------------------ Receive Ports - FPGA RX interface Ports -----------------
    signal  gt0_rxdata_i                    : std_logic_vector(63 downto 0);
    ------------------- Receive Ports - Pattern Checker Ports ------------------
    signal  gt0_rxprbserr_i                 : std_logic;
    signal  gt0_rxprbssel_i                 : std_logic_vector(2 downto 0);
    ------------------- Receive Ports - Pattern Checker ports ------------------
    signal  gt0_rxprbscntreset_i            : std_logic;
    ------------------------ Receive Ports - RX AFE Ports ----------------------
    signal  gt0_gthrxn_i                    : std_logic;
    --------------------- Receive Ports - RX Equalizer Ports -------------------
    signal  gt0_rxmonitorout_i              : std_logic_vector(6 downto 0);
    signal  gt0_rxmonitorsel_i              : std_logic_vector(1 downto 0);
    --------------- Receive Ports - RX Fabric Output Control Ports -------------
    signal  gt0_rxoutclk_i                  : std_logic;
    ---------------------- Receive Ports - RX Gearbox Ports --------------------
    signal  gt0_rxdatavalid_i               : std_logic;
    signal  gt0_rxheader_i                  : std_logic_vector(1 downto 0);
    signal  gt0_rxheadervalid_i             : std_logic;
    --------------------- Receive Ports - RX Gearbox Ports  --------------------
    signal  gt0_rxgearboxslip_i             : std_logic;
    ------------- Receive Ports - RX Initialization and Reset Ports ------------
    signal  gt0_gtrxreset_i                 : std_logic;
    ------------------------ Receive Ports -RX AFE Ports -----------------------
    signal  gt0_gthrxp_i                    : std_logic;
    -------------- Receive Ports -RX Initialization and Reset Ports ------------
    signal  gt0_rxresetdone_i               : std_logic;
    --------------------- TX Initialization and Reset Ports --------------------
    signal  gt0_gttxreset_i                 : std_logic;
    signal  gt0_txuserrdy_i                 : std_logic;
    -------------- Transmit Ports - 64b66b and 64b67b Gearbox Ports ------------
    signal  gt0_txheader_i                  : std_logic_vector(1 downto 0);
    ------------------ Transmit Ports - Pattern Generator Ports ----------------
    signal  gt0_txprbsforceerr_i            : std_logic;
    ------------------ Transmit Ports - TX Data Path interface -----------------
    signal  gt0_txdata_i                    : std_logic_vector(63 downto 0);
    ---------------- Transmit Ports - TX Driver and OOB signaling --------------
    signal  gt0_gthtxn_i                    : std_logic;
    signal  gt0_gthtxp_i                    : std_logic;
    ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    signal  gt0_txoutclk_i                  : std_logic;
    signal  gt0_txoutclkfabric_i            : std_logic;
    signal  gt0_txoutclkpcs_i               : std_logic;
    --------------------- Transmit Ports - TX Gearbox Ports --------------------
    signal  gt0_txsequence_i                : std_logic_vector(6 downto 0);
    ------------- Transmit Ports - TX Initialization and Reset Ports -----------
    signal  gt0_txresetdone_i               : std_logic;
    ------------------ Transmit Ports - pattern Generator Ports ----------------
    signal  gt0_txprbssel_i                 : std_logic_vector(2 downto 0);


    --________________________________________________________________________
    --________________________________________________________________________
    --GT1  (X1Y37)

    ------------------------------- Loopback Ports -----------------------------
    signal  gt1_loopback_i                  : std_logic_vector(2 downto 0);
    --------------------- RX Initialization and Reset Ports --------------------
    signal  gt1_eyescanreset_i              : std_logic;
    signal  gt1_rxuserrdy_i                 : std_logic;
    -------------------------- RX Margin Analysis Ports ------------------------
    signal  gt1_eyescandataerror_i          : std_logic;
    signal  gt1_eyescantrigger_i            : std_logic;
    ------------------- Receive Ports - Digital Monitor Ports ------------------
    signal  gt1_dmonitorout_i               : std_logic_vector(14 downto 0);
    ------------------ Receive Ports - FPGA RX interface Ports -----------------
    signal  gt1_rxdata_i                    : std_logic_vector(63 downto 0);
    ------------------- Receive Ports - Pattern Checker Ports ------------------
    signal  gt1_rxprbserr_i                 : std_logic;
    signal  gt1_rxprbssel_i                 : std_logic_vector(2 downto 0);
    ------------------- Receive Ports - Pattern Checker ports ------------------
    signal  gt1_rxprbscntreset_i            : std_logic;
    ------------------------ Receive Ports - RX AFE Ports ----------------------
    signal  gt1_gthrxn_i                    : std_logic;
    --------------------- Receive Ports - RX Equalizer Ports -------------------
    signal  gt1_rxmonitorout_i              : std_logic_vector(6 downto 0);
    signal  gt1_rxmonitorsel_i              : std_logic_vector(1 downto 0);
    --------------- Receive Ports - RX Fabric Output Control Ports -------------
    signal  gt1_rxoutclk_i                  : std_logic;
    ---------------------- Receive Ports - RX Gearbox Ports --------------------
    signal  gt1_rxdatavalid_i               : std_logic;
    signal  gt1_rxheader_i                  : std_logic_vector(1 downto 0);
    signal  gt1_rxheadervalid_i             : std_logic;
    --------------------- Receive Ports - RX Gearbox Ports  --------------------
    signal  gt1_rxgearboxslip_i             : std_logic;
    ------------- Receive Ports - RX Initialization and Reset Ports ------------
    signal  gt1_gtrxreset_i                 : std_logic;
    ------------------------ Receive Ports -RX AFE Ports -----------------------
    signal  gt1_gthrxp_i                    : std_logic;
    -------------- Receive Ports -RX Initialization and Reset Ports ------------
    signal  gt1_rxresetdone_i               : std_logic;
    --------------------- TX Initialization and Reset Ports --------------------
    signal  gt1_gttxreset_i                 : std_logic;
    signal  gt1_txuserrdy_i                 : std_logic;
    -------------- Transmit Ports - 64b66b and 64b67b Gearbox Ports ------------
    signal  gt1_txheader_i                  : std_logic_vector(1 downto 0);
    ------------------ Transmit Ports - Pattern Generator Ports ----------------
    signal  gt1_txprbsforceerr_i            : std_logic;
    ------------------ Transmit Ports - TX Data Path interface -----------------
    signal  gt1_txdata_i                    : std_logic_vector(63 downto 0);
    ---------------- Transmit Ports - TX Driver and OOB signaling --------------
    signal  gt1_gthtxn_i                    : std_logic;
    signal  gt1_gthtxp_i                    : std_logic;
    ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    signal  gt1_txoutclk_i                  : std_logic;
    signal  gt1_txoutclkfabric_i            : std_logic;
    signal  gt1_txoutclkpcs_i               : std_logic;
    --------------------- Transmit Ports - TX Gearbox Ports --------------------
    signal  gt1_txsequence_i                : std_logic_vector(6 downto 0);
    ------------- Transmit Ports - TX Initialization and Reset Ports -----------
    signal  gt1_txresetdone_i               : std_logic;
    ------------------ Transmit Ports - pattern Generator Ports ----------------
    signal  gt1_txprbssel_i                 : std_logic_vector(2 downto 0);


    --________________________________________________________________________
    --________________________________________________________________________
    --GT2  (X1Y38)

    ------------------------------- Loopback Ports -----------------------------
    signal  gt2_loopback_i                  : std_logic_vector(2 downto 0);
    --------------------- RX Initialization and Reset Ports --------------------
    signal  gt2_eyescanreset_i              : std_logic;
    signal  gt2_rxuserrdy_i                 : std_logic;
    -------------------------- RX Margin Analysis Ports ------------------------
    signal  gt2_eyescandataerror_i          : std_logic;
    signal  gt2_eyescantrigger_i            : std_logic;
    ------------------- Receive Ports - Digital Monitor Ports ------------------
    signal  gt2_dmonitorout_i               : std_logic_vector(14 downto 0);
    ------------------ Receive Ports - FPGA RX interface Ports -----------------
    signal  gt2_rxdata_i                    : std_logic_vector(63 downto 0);
    ------------------- Receive Ports - Pattern Checker Ports ------------------
    signal  gt2_rxprbserr_i                 : std_logic;
    signal  gt2_rxprbssel_i                 : std_logic_vector(2 downto 0);
    ------------------- Receive Ports - Pattern Checker ports ------------------
    signal  gt2_rxprbscntreset_i            : std_logic;
    ------------------------ Receive Ports - RX AFE Ports ----------------------
    signal  gt2_gthrxn_i                    : std_logic;
    --------------------- Receive Ports - RX Equalizer Ports -------------------
    signal  gt2_rxmonitorout_i              : std_logic_vector(6 downto 0);
    signal  gt2_rxmonitorsel_i              : std_logic_vector(1 downto 0);
    --------------- Receive Ports - RX Fabric Output Control Ports -------------
    signal  gt2_rxoutclk_i                  : std_logic;
    ---------------------- Receive Ports - RX Gearbox Ports --------------------
    signal  gt2_rxdatavalid_i               : std_logic;
    signal  gt2_rxheader_i                  : std_logic_vector(1 downto 0);
    signal  gt2_rxheadervalid_i             : std_logic;
    --------------------- Receive Ports - RX Gearbox Ports  --------------------
    signal  gt2_rxgearboxslip_i             : std_logic;
    ------------- Receive Ports - RX Initialization and Reset Ports ------------
    signal  gt2_gtrxreset_i                 : std_logic;
    ------------------------ Receive Ports -RX AFE Ports -----------------------
    signal  gt2_gthrxp_i                    : std_logic;
    -------------- Receive Ports -RX Initialization and Reset Ports ------------
    signal  gt2_rxresetdone_i               : std_logic;
    --------------------- TX Initialization and Reset Ports --------------------
    signal  gt2_gttxreset_i                 : std_logic;
    signal  gt2_txuserrdy_i                 : std_logic;
    -------------- Transmit Ports - 64b66b and 64b67b Gearbox Ports ------------
    signal  gt2_txheader_i                  : std_logic_vector(1 downto 0);
    ------------------ Transmit Ports - Pattern Generator Ports ----------------
    signal  gt2_txprbsforceerr_i            : std_logic;
    ------------------ Transmit Ports - TX Data Path interface -----------------
    signal  gt2_txdata_i                    : std_logic_vector(63 downto 0);
    ---------------- Transmit Ports - TX Driver and OOB signaling --------------
    signal  gt2_gthtxn_i                    : std_logic;
    signal  gt2_gthtxp_i                    : std_logic;
    ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    signal  gt2_txoutclk_i                  : std_logic;
    signal  gt2_txoutclkfabric_i            : std_logic;
    signal  gt2_txoutclkpcs_i               : std_logic;
    --------------------- Transmit Ports - TX Gearbox Ports --------------------
    signal  gt2_txsequence_i                : std_logic_vector(6 downto 0);
    ------------- Transmit Ports - TX Initialization and Reset Ports -----------
    signal  gt2_txresetdone_i               : std_logic;
    ------------------ Transmit Ports - pattern Generator Ports ----------------
    signal  gt2_txprbssel_i                 : std_logic_vector(2 downto 0);


    --________________________________________________________________________
    --________________________________________________________________________
    --GT3  (X1Y39)

    ------------------------------- Loopback Ports -----------------------------
    signal  gt3_loopback_i                  : std_logic_vector(2 downto 0);
    --------------------- RX Initialization and Reset Ports --------------------
    signal  gt3_eyescanreset_i              : std_logic;
    signal  gt3_rxuserrdy_i                 : std_logic;
    -------------------------- RX Margin Analysis Ports ------------------------
    signal  gt3_eyescandataerror_i          : std_logic;
    signal  gt3_eyescantrigger_i            : std_logic;
    ------------------- Receive Ports - Digital Monitor Ports ------------------
    signal  gt3_dmonitorout_i               : std_logic_vector(14 downto 0);
    ------------------ Receive Ports - FPGA RX interface Ports -----------------
    signal  gt3_rxdata_i                    : std_logic_vector(63 downto 0);
    ------------------- Receive Ports - Pattern Checker Ports ------------------
    signal  gt3_rxprbserr_i                 : std_logic;
    signal  gt3_rxprbssel_i                 : std_logic_vector(2 downto 0);
    ------------------- Receive Ports - Pattern Checker ports ------------------
    signal  gt3_rxprbscntreset_i            : std_logic;
    ------------------------ Receive Ports - RX AFE Ports ----------------------
    signal  gt3_gthrxn_i                    : std_logic;
    --------------------- Receive Ports - RX Equalizer Ports -------------------
    signal  gt3_rxmonitorout_i              : std_logic_vector(6 downto 0);
    signal  gt3_rxmonitorsel_i              : std_logic_vector(1 downto 0);
    --------------- Receive Ports - RX Fabric Output Control Ports -------------
    signal  gt3_rxoutclk_i                  : std_logic;
    ---------------------- Receive Ports - RX Gearbox Ports --------------------
    signal  gt3_rxdatavalid_i               : std_logic;
    signal  gt3_rxheader_i                  : std_logic_vector(1 downto 0);
    signal  gt3_rxheadervalid_i             : std_logic;
    --------------------- Receive Ports - RX Gearbox Ports  --------------------
    signal  gt3_rxgearboxslip_i             : std_logic;
    ------------- Receive Ports - RX Initialization and Reset Ports ------------
    signal  gt3_gtrxreset_i                 : std_logic;
    ------------------------ Receive Ports -RX AFE Ports -----------------------
    signal  gt3_gthrxp_i                    : std_logic;
    -------------- Receive Ports -RX Initialization and Reset Ports ------------
    signal  gt3_rxresetdone_i               : std_logic;
    --------------------- TX Initialization and Reset Ports --------------------
    signal  gt3_gttxreset_i                 : std_logic;
    signal  gt3_txuserrdy_i                 : std_logic;
    -------------- Transmit Ports - 64b66b and 64b67b Gearbox Ports ------------
    signal  gt3_txheader_i                  : std_logic_vector(1 downto 0);
    ------------------ Transmit Ports - Pattern Generator Ports ----------------
    signal  gt3_txprbsforceerr_i            : std_logic;
    ------------------ Transmit Ports - TX Data Path interface -----------------
    signal  gt3_txdata_i                    : std_logic_vector(63 downto 0);
    ---------------- Transmit Ports - TX Driver and OOB signaling --------------
    signal  gt3_gthtxn_i                    : std_logic;
    signal  gt3_gthtxp_i                    : std_logic;
    ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    signal  gt3_txoutclk_i                  : std_logic;
    signal  gt3_txoutclkfabric_i            : std_logic;
    signal  gt3_txoutclkpcs_i               : std_logic;
    --------------------- Transmit Ports - TX Gearbox Ports --------------------
    signal  gt3_txsequence_i                : std_logic_vector(6 downto 0);
    ------------- Transmit Ports - TX Initialization and Reset Ports -----------
    signal  gt3_txresetdone_i               : std_logic;
    ------------------ Transmit Ports - pattern Generator Ports ----------------
    signal  gt3_txprbssel_i                 : std_logic_vector(2 downto 0);


    --____________________________COMMON PORTS________________________________
    ---------------------- Common Block  - Ref Clock Ports ---------------------
    signal  gt0_gtrefclk1_common_i          : std_logic;
    ------------------------- Common Block - QPLL Ports ------------------------
    signal  gt0_qplllock_i                  : std_logic;
    signal  gt0_qpllrefclklost_i            : std_logic;
    signal  gt0_qpllreset_i                 : std_logic;


    signal gt0_txdata_r : std_logic_vector(63 downto 0);
    signal gt0_rxdata_r : std_logic_vector(63 downto 0);

    signal gt1_txdata_r : std_logic_vector(63 downto 0);
    signal gt1_rxdata_r : std_logic_vector(63 downto 0);

    signal gt2_txdata_r : std_logic_vector(63 downto 0);
    signal gt2_rxdata_r : std_logic_vector(63 downto 0);

    signal gt3_txdata_r : std_logic_vector(63 downto 0);
    signal gt3_rxdata_r : std_logic_vector(63 downto 0);

    signal gt0_txheader_r           :   std_logic_vector(1 downto 0);
    signal gt0_rxheader_r           :   std_logic_vector(1 downto 0);

    signal gt1_txheader_r           :   std_logic_vector(1 downto 0);
    signal gt1_rxheader_r           :   std_logic_vector(1 downto 0);

    signal gt2_txheader_r           :   std_logic_vector(1 downto 0);
    signal gt2_rxheader_r           :   std_logic_vector(1 downto 0);

    signal gt3_txheader_r           :   std_logic_vector(1 downto 0);
    signal gt3_rxheader_r           :   std_logic_vector(1 downto 0);


    ------------------------------- User Clocks ---------------------------------
    signal gt0_txusrclk_i                  : std_logic;
    signal gt0_txusrclk2_i                 : std_logic;
    signal gt0_rxusrclk_i                  : std_logic;
    signal gt0_rxusrclk2_i                 : std_logic;
    signal gt1_txusrclk_i                  : std_logic;
    signal gt1_txusrclk2_i                 : std_logic;
    signal gt1_rxusrclk_i                  : std_logic;
    signal gt1_rxusrclk2_i                 : std_logic;

    signal gt2_txusrclk_i                  : std_logic;
    signal gt2_txusrclk2_i                 : std_logic;
    signal gt2_rxusrclk_i                  : std_logic;
    signal gt2_rxusrclk2_i                 : std_logic;
    signal gt3_txusrclk_i                  : std_logic;
    signal gt3_txusrclk2_i                 : std_logic;
    signal gt3_rxusrclk_i                  : std_logic;
    signal gt3_rxusrclk2_i                 : std_logic;

    signal gt0_txmmcm_lock_i               : std_logic;
    signal gt0_txmmcm_reset_i              : std_logic;
    signal gt0_rxmmcm_lock_i               : std_logic;
    signal gt0_rxmmcm_reset_i              : std_logic;
    signal gt1_txmmcm_lock_i               : std_logic;
    signal gt1_txmmcm_reset_i              : std_logic;
    signal gt1_rxmmcm_lock_i               : std_logic;
    signal gt1_rxmmcm_reset_i              : std_logic;
    signal gt2_txmmcm_lock_i               : std_logic;
    signal gt2_txmmcm_reset_i              : std_logic;
    signal gt2_rxmmcm_lock_i               : std_logic;
    signal gt2_rxmmcm_reset_i              : std_logic;
    signal gt3_txmmcm_lock_i               : std_logic;
    signal gt3_txmmcm_reset_i              : std_logic;
    signal gt3_rxmmcm_lock_i               : std_logic;
    signal gt3_rxmmcm_reset_i              : std_logic;


    --************************** Register Declarations ****************************
    signal  gt0_txfsmresetdone_i            : std_logic;
    signal  gt0_rxfsmresetdone_i            : std_logic;

    signal  gt1_txfsmresetdone_i            : std_logic;
    signal  gt1_rxfsmresetdone_i            : std_logic;

    signal  gt2_txfsmresetdone_i            : std_logic;
    signal  gt2_rxfsmresetdone_i            : std_logic;

    signal  gt3_txfsmresetdone_i            : std_logic;
    signal  gt3_rxfsmresetdone_i            : std_logic;


    ----------------------------- Link Status --------------------------------
    signal  gt0_linkstatus_i                : std_logic;
    signal  gt1_linkstatus_i                : std_logic;
    signal  gt2_linkstatus_i                : std_logic;
    signal  gt3_linkstatus_i                : std_logic;

    ----------------------------- Reference Clocks ----------------------------

    -- RESET
    signal soft_reset_i    : std_logic;
    signal global_reset_i  : std_logic;
    signal reset_i2c, reset_r, reset_r2 : std_logic;

    -- XGETH TESTER SIGNALS
    signal xgeth_waddr       : vector7_type(3 downto 0);
    signal xgeth_wdata       : vector32_type(3 downto 0);
    signal xgeth_raddr       : vector7_type(3 downto 0);
    signal xgeth_rdata       : vector32_type(3 downto 0);
    signal xgeth_wen         : std_logic_vector(3 downto 0);


    -- UART SIGNALS
    signal uart_rxdata_i     : std_logic_vector(7 downto 0);
    signal uart_txdata_i     : std_logic_vector(7 downto 0);
    signal uart_start_i      : std_logic;
    signal uart_busy_i       : std_logic;
    signal uart_available_i  : std_logic;


    --____________________________COMMON PORTS________________________________

    ------------------------- Clock Input Signals ------------------------
    signal sysclk_i                        : std_logic;
    signal sysclk_g_i                      : std_logic;
    signal q8_clk0_refclk_g_i              : std_logic;
    signal q8_clk0_refclk_i                : std_logic;



    ------------------------------- Global Signals -----------------------------
    signal tied_to_ground_i                : std_logic;
    signal tied_to_ground_vec_i            : std_logic_vector(63 downto 0);
    signal tied_to_vcc_i                   : std_logic;
    signal tied_to_vcc_vec_i               : std_logic_vector(7 downto 0);


    signal blink                           : std_logic;
    signal on_frame_sent_1, on_frame_sent_2, on_frame_sent_3, on_frame_sent_4  : std_logic;
    signal on_frame_received_1, on_frame_received_2, on_frame_received_3, on_frame_received_4  : std_logic;
    signal drpclk_i : std_logic;
    signal rd_addr:  std_logic_vector(10 downto 0);
    signal rd_be:  std_logic_vector(3 downto 0);
    signal rd_data:  std_logic_vector(31 downto 0);

    signal wr_addr:  std_logic_vector(10 downto 0);
    signal wr_be:  std_logic_vector(7 downto 0);
    signal wr_data:  std_logic_vector(63 downto 0);
    signal wr_en:  std_logic;
    signal clk_250: std_logic;

    --Interface PCIe - XGETH
    signal wr_addr_inc_out :  std_logic_vector(8 downto 0);
    signal rd_addr_out :  std_logic_vector(8 downto 0);
    signal write_en_out:  std_logic;
    signal post_wr_data_out:  std_logic_vector(31 downto 0);
    signal rd_data_raw_o_in:  std_logic_vector(31 downto 0);

    begin

--    **************************** Main Body of Code *******************************


--    inst_serial_interface : entity work.serial_interface
--    generic map
--    (
--        enable_simulation => enable_simulation
--    )
--    port map (
--        clock => q8_clk0_refclk_g_i,
--        reset => not soft_reset_i,
--        rx_data => uart_rxdata_i,
--        rx_start => uart_start_i,
--        rx_busy => uart_busy_i,
--        rxd => UART_RXD_OUT,
--        txd => UART_TXD_IN,
--        tx_data => uart_txdata_i,
--        tx_av => uart_available_i
--    );


--    inst_control_interface : entity work.control_interface
--        port map (
--            clock => q8_clk0_refclk_g_i,
--            areset => soft_reset_i,
--            tx_data => uart_rxdata_i,
--            tx_start => uart_start_i,
--            tx_busy => uart_busy_i,
--            rx_data => uart_txdata_i,
--            rx_av => uart_available_i,
--            addr_out_r => xgeth_raddr,
--            addr_out_w => xgeth_waddr,
--            data_out => xgeth_wdata,
--            data_in => xgeth_rdata,
--            wen => xgeth_wen,
--            ren => xgeth_ren
--        );

    i2c_gen: if (not enable_simulation) generate
        inst_i2c_interface : entity work.i2c_interface
        port map (  -- Clocks
            clock => sysclk_g_i,
            reset =>  reset_i2c,

            SDA => I2C_FPGA_SDA,
            SCL => I2C_FPGA_SCL
         );
    end generate;

    inst_pcie : xilinx_pcie_3_0_7vx_ep
    port map(
        pci_exp_txp => pci_exp_txp,
        pci_exp_txn => pci_exp_txn,
        pci_exp_rxp => pci_exp_rxp,
        pci_exp_rxn => pci_exp_rxn,
        sys_clk_p   => sys_clk_p_pcie,
        sys_clk_n   => sys_clk_n_pcie,
        sys_rst_n   => sys_rst_n_pcie,

        user_clk_out => clk_250,
        wr_addr_inc_out => wr_addr_inc_out,
        rd_addr_out => rd_addr_out,
        write_en_out => write_en_out,
        post_wr_data_out => post_wr_data_out,
        rd_data_raw_o_in => rd_data_raw_o_in
    );
    xgeth_waddr(0) <= wr_addr_inc_out(6 downto 0) when wr_addr_inc_out(8 downto 7) = "00" else (others => '0');
    xgeth_waddr(1) <= wr_addr_inc_out(6 downto 0) when wr_addr_inc_out(8 downto 7) = "01" else (others => '0');
    xgeth_waddr(2) <= wr_addr_inc_out(6 downto 0) when wr_addr_inc_out(8 downto 7) = "10" else (others => '0');
    xgeth_waddr(3) <= wr_addr_inc_out(6 downto 0) when wr_addr_inc_out(8 downto 7) = "11" else (others => '0');
    xgeth_wdata(0) <= post_wr_data_out            when wr_addr_inc_out(8 downto 7) = "00" else (others => '0');
    xgeth_wdata(1) <= post_wr_data_out            when wr_addr_inc_out(8 downto 7) = "01" else (others => '0');
    xgeth_wdata(2) <= post_wr_data_out            when wr_addr_inc_out(8 downto 7) = "10" else (others => '0');
    xgeth_wdata(3) <= post_wr_data_out            when wr_addr_inc_out(8 downto 7) = "11" else (others => '0');
    xgeth_raddr(0) <= rd_addr_out(6 downto 0)     when rd_addr_out(8 downto 7) = "00" else (others => '0');
    xgeth_raddr(1) <= rd_addr_out(6 downto 0)     when rd_addr_out(8 downto 7) = "01" else (others => '0');
    xgeth_raddr(2) <= rd_addr_out(6 downto 0)     when rd_addr_out(8 downto 7) = "10" else (others => '0');
    xgeth_raddr(3) <= rd_addr_out(6 downto 0)     when rd_addr_out(8 downto 7) = "11" else (others => '0');
    rd_data_raw_o_in <= xgeth_rdata(0)            when rd_addr_out(8 downto 7) = "00" else
                        xgeth_rdata(1)            when rd_addr_out(8 downto 7) = "01" else
                        xgeth_rdata(2)            when rd_addr_out(8 downto 7) = "10" else
                        xgeth_rdata(3)            when rd_addr_out(8 downto 7) = "11" else (others => '0');
    xgeth_wen(0) <= write_en_out                when wr_addr_inc_out(8 downto 7) = "00" else '0';
    xgeth_wen(1) <= write_en_out                when wr_addr_inc_out(8 downto 7) = "01" else '0';
    xgeth_wen(2) <= write_en_out                when wr_addr_inc_out(8 downto 7) = "10" else '0';
    xgeth_wen(3) <= write_en_out                when wr_addr_inc_out(8 downto 7) = "11" else '0';

--    xgeth_waddr(to_integer(unsigned(wr_addr_inc_out(8 downto 7)))) <= wr_addr_inc_out(6 downto 0);
--    xgeth_wdata(to_integer(unsigned(wr_addr_inc_out(8 downto 7)))) <= post_wr_data_out(31 downto 0);
--    xgeth_raddr(to_integer(unsigned(rd_addr_out(8 downto 7)))) <= rd_addr_out(6 downto 0);
--    rd_data_raw_o_in <= xgeth_rdata(to_integer(unsigned(rd_addr_out(8 downto 7))));
--    xgeth_wen(to_integer(unsigned(wr_addr_inc_out(8 downto 7))))   <= write_en_out;

    inst_xgeth_tester1 : xgeth_tester
    port map
    (
        -- Clocks
        clk_156             => q8_clk0_refclk_g_i,
        clk_250             => clk_250,
        tx_clk_161_13       => gt0_txusrclk2_i,
        rx_clk_161_13       => gt0_rxusrclk2_i,
        clk_xgmii_rx        => q8_clk0_refclk_g_i,
        clk_xgmii_tx        => q8_clk0_refclk_g_i,

        -- Resets
        async_reset_n       => not soft_reset_i,
        reset_tx_done       => gt0_txfsmresetdone_i,
        reset_rx_done       => gt0_rxfsmresetdone_i,
        reset_tx_n          => gt0_txresetdone_i,
        reset_rx_n          => gt0_rxresetdone_i,


        linkstatus          => gt0_linkstatus_i,
        eth_rx_los          => ETH1_RX_LOS,
        rx_data_in          => gt0_rxdata_i,
        rx_header_in        => gt0_rxheader_i,
        rx_data_valid_in    => gt0_rxdatavalid_i,
        rx_header_valid_in  => gt0_rxheadervalid_i ,
        tx_data_out         => gt0_txdata_i,
        tx_header_out       => gt0_txheader_i,
        tx_sequence_out     => gt0_txsequence_i,
        rxgearboxslip_out   => gt0_rxgearboxslip_i,

        --PCIe interface
        xgeth_waddr   => xgeth_waddr(0),
        xgeth_wdata   => xgeth_wdata(0),
        xgeth_raddr   => xgeth_raddr(0),
        xgeth_rdata   => xgeth_rdata(0),
        xgeth_wen     => xgeth_wen(0),
        on_frame_sent       => on_frame_sent_1,
        on_frame_received   => on_frame_received_1,

        verify_system_rec   => open

    );



    inst_xgeth_tester2 : xgeth_tester
    port map
    (
        -- Clocks
        clk_156             => q8_clk0_refclk_g_i,
        clk_250             => clk_250,
        tx_clk_161_13       => gt1_txusrclk2_i,
        rx_clk_161_13       => gt1_rxusrclk2_i,
        clk_xgmii_rx        => q8_clk0_refclk_g_i,
        clk_xgmii_tx        => q8_clk0_refclk_g_i,

        -- Resets
        async_reset_n       => not soft_reset_i,
        reset_tx_done       => gt1_txfsmresetdone_i,
        reset_rx_done       => gt1_rxfsmresetdone_i,
        reset_tx_n          => gt1_txresetdone_i,
        reset_rx_n          => gt1_rxresetdone_i,


        linkstatus          => gt1_linkstatus_i,
        eth_rx_los          => ETH2_RX_LOS,
        rx_data_in          => gt1_rxdata_i,
        rx_header_in        => gt1_rxheader_i,
        rx_data_valid_in    => gt1_rxdatavalid_i,
        rx_header_valid_in  => gt1_rxheadervalid_i ,
        tx_data_out         => gt1_txdata_i,
        tx_header_out       => gt1_txheader_i,
        tx_sequence_out     => gt1_txsequence_i,
        rxgearboxslip_out   => gt1_rxgearboxslip_i,

        --PCIe interface
        xgeth_waddr   => xgeth_waddr(1),
        xgeth_wdata   => xgeth_wdata(1),
        xgeth_raddr   => xgeth_raddr(1),
        xgeth_rdata   => xgeth_rdata(1),
        xgeth_wen     => xgeth_wen(1),
        on_frame_sent       => on_frame_sent_2,
        on_frame_received   => on_frame_received_2,

        verify_system_rec   => open

    );

    inst_xgeth_tester3 : xgeth_tester
    port map
    (
        -- Clocks
        clk_156             => q8_clk0_refclk_g_i,
        clk_250             => clk_250,
        tx_clk_161_13       => gt2_txusrclk2_i,
        rx_clk_161_13       => gt2_rxusrclk2_i,
        clk_xgmii_rx        => q8_clk0_refclk_g_i,
        clk_xgmii_tx        => q8_clk0_refclk_g_i,

        -- Resets
        async_reset_n       => not soft_reset_i,
        reset_tx_done       => gt2_txfsmresetdone_i,
        reset_rx_done       => gt2_rxfsmresetdone_i,
        reset_tx_n          => gt2_txresetdone_i,
        reset_rx_n          => gt2_rxresetdone_i,


        linkstatus          => gt2_linkstatus_i,
        eth_rx_los          => ETH3_RX_LOS,
        rx_data_in          => gt2_rxdata_i,
        rx_header_in        => gt2_rxheader_i,
        rx_data_valid_in    => gt2_rxdatavalid_i,
        rx_header_valid_in  => gt2_rxheadervalid_i ,
        tx_data_out         => gt2_txdata_i,
        tx_header_out       => gt2_txheader_i,
        tx_sequence_out     => gt2_txsequence_i,
        rxgearboxslip_out   => gt2_rxgearboxslip_i,

        --PCIe interface
        xgeth_waddr   => xgeth_waddr(2),
        xgeth_wdata   => xgeth_wdata(2),
        xgeth_raddr   => xgeth_raddr(2),
        xgeth_rdata   => xgeth_rdata(2),
        xgeth_wen     => xgeth_wen(2),
        on_frame_sent       => on_frame_sent_3,
        on_frame_received   => on_frame_received_3,

        verify_system_rec   => open

    );

    inst_xgeth_tester4 : xgeth_tester
    port map
    (
        -- Clocks
        clk_156             => q8_clk0_refclk_g_i,
        clk_250             => clk_250,
        tx_clk_161_13       => gt3_txusrclk2_i,
        rx_clk_161_13       => gt3_rxusrclk2_i,
        clk_xgmii_rx        => q8_clk0_refclk_g_i,
        clk_xgmii_tx        => q8_clk0_refclk_g_i,

        -- Resets
        async_reset_n       => not soft_reset_i,
        reset_tx_done       => gt3_txfsmresetdone_i,
        reset_rx_done       => gt3_rxfsmresetdone_i,
        reset_tx_n          => gt3_txresetdone_i,
        reset_rx_n          => gt3_rxresetdone_i,


        linkstatus          => gt3_linkstatus_i,
        eth_rx_los          => ETH4_RX_LOS,
        rx_data_in          => gt3_rxdata_i,
        rx_header_in        => gt3_rxheader_i,
        rx_data_valid_in    => gt3_rxdatavalid_i,
        rx_header_valid_in  => gt3_rxheadervalid_i ,
        tx_data_out         => gt3_txdata_i,
        tx_header_out       => gt3_txheader_i,
        tx_sequence_out     => gt3_txsequence_i,
        rxgearboxslip_out   => gt3_rxgearboxslip_i,

        --PCIe interface
        xgeth_waddr   => xgeth_waddr(3),
        xgeth_wdata   => xgeth_wdata(3),
        xgeth_raddr   => xgeth_raddr(3),
        xgeth_rdata   => xgeth_rdata(3),
        xgeth_wen     => xgeth_wen(3),
        on_frame_sent       => on_frame_sent_4,
        on_frame_received   => on_frame_received_4,
        verify_system_rec   => open

    );

    reverse_bits: for i in 0 to 63 generate
        gt0_txdata_r(i) <= gt0_txdata_i(63 - i);
        gt0_rxdata_i(i) <= gt0_rxdata_r(63 - i);

        gt1_txdata_r(i) <= gt1_txdata_i(63 - i);
        gt1_rxdata_i(i) <= gt1_rxdata_r(63 - i);

        gt2_txdata_r(i) <= gt2_txdata_i(63 - i);
        gt2_rxdata_i(i) <= gt2_rxdata_r(63 - i);

        gt3_txdata_r(i) <= gt3_txdata_i(63 - i);
        gt3_rxdata_i(i) <= gt3_rxdata_r(63 - i);
    end generate;

    reverse_header: for i in 0 to 1 generate
        gt0_txheader_r(i) <= gt0_txheader_i(1 - i);
        gt0_rxheader_i(i) <= gt0_rxheader_r(1 - i);

        gt1_txheader_r(i) <= gt1_txheader_i(1 - i);
        gt1_rxheader_i(i) <= gt1_rxheader_r(1 - i);

        gt2_txheader_r(i) <= gt2_txheader_i(1 - i);
        gt2_rxheader_i(i) <= gt2_rxheader_r(1 - i);

        gt3_txheader_r(i) <= gt3_txheader_i(1 - i);
        gt3_rxheader_i(i) <= gt3_rxheader_r(1 - i);
    end generate;

      gtwizard_0_support_i : gtwizard_0_support
    generic map
    (
        EXAMPLE_SIM_GTRESET_SPEEDUP     =>      EXAMPLE_SIM_GTRESET_SPEEDUP,
        STABLE_CLOCK_PERIOD             =>      STABLE_CLOCK_PERIOD
    )
    port map
    (
        SOFT_RESET_TX_IN                =>      soft_reset_i,
        SOFT_RESET_RX_IN                =>      soft_reset_i,
        DONT_RESET_ON_DATA_ERROR_IN     =>      tied_to_ground_i,
        Q8_CLK0_GTREFCLK_PAD_N_IN       =>      Q8_CLK0_GTREFCLK_PAD_N_IN,
        Q8_CLK0_GTREFCLK_PAD_P_IN       =>      Q8_CLK0_GTREFCLK_PAD_P_IN,

        Q8_CLK0_GTREFCLK_OUT            =>      q8_clk0_refclk_i,

        GT0_TX_MMCM_LOCK_OUT            =>      gt0_txmmcm_lock_i,
        GT0_RX_MMCM_LOCK_OUT            =>      gt0_rxmmcm_lock_i,
        GT0_TX_FSM_RESET_DONE_OUT       =>      gt0_txfsmresetdone_i,
        GT0_RX_FSM_RESET_DONE_OUT       =>      gt0_rxfsmresetdone_i,
        GT0_DATA_VALID_IN               =>      gt0_linkstatus_i,

        GT1_TX_MMCM_LOCK_OUT            =>      gt1_txmmcm_lock_i,
        GT1_RX_MMCM_LOCK_OUT            =>      gt1_rxmmcm_lock_i,
        GT1_TX_FSM_RESET_DONE_OUT       =>      gt1_txfsmresetdone_i,
        GT1_RX_FSM_RESET_DONE_OUT       =>      gt1_rxfsmresetdone_i,
        GT1_DATA_VALID_IN               =>      gt1_linkstatus_i,

        GT2_TX_MMCM_LOCK_OUT            =>      gt2_txmmcm_lock_i,
        GT2_RX_MMCM_LOCK_OUT            =>      gt2_rxmmcm_lock_i,
        GT2_TX_FSM_RESET_DONE_OUT       =>      gt2_txfsmresetdone_i,
        GT2_RX_FSM_RESET_DONE_OUT       =>      gt2_rxfsmresetdone_i,
        GT2_DATA_VALID_IN               =>      gt2_linkstatus_i,

        GT3_TX_MMCM_LOCK_OUT            =>      gt3_txmmcm_lock_i,
        GT3_RX_MMCM_LOCK_OUT            =>      gt3_rxmmcm_lock_i,
        GT3_TX_FSM_RESET_DONE_OUT       =>      gt3_txfsmresetdone_i,
        GT3_RX_FSM_RESET_DONE_OUT       =>      gt3_rxfsmresetdone_i,
        GT3_DATA_VALID_IN               =>      gt3_linkstatus_i,

        GT0_TXUSRCLK_OUT                =>      gt0_txusrclk_i,
        GT0_TXUSRCLK2_OUT               =>      gt0_txusrclk2_i,
        GT0_RXUSRCLK_OUT                =>      gt0_rxusrclk_i,
        GT0_RXUSRCLK2_OUT               =>      gt0_rxusrclk2_i,

        GT1_TXUSRCLK_OUT                =>      gt1_txusrclk_i,
        GT1_TXUSRCLK2_OUT               =>      gt1_txusrclk2_i,
        GT1_RXUSRCLK_OUT                =>      gt1_rxusrclk_i,
        GT1_RXUSRCLK2_OUT               =>      gt1_rxusrclk2_i,

        GT2_TXUSRCLK_OUT                =>      gt2_txusrclk_i,
        GT2_TXUSRCLK2_OUT               =>      gt2_txusrclk2_i,
        GT2_RXUSRCLK_OUT                =>      gt2_rxusrclk_i,
        GT2_RXUSRCLK2_OUT               =>      gt2_rxusrclk2_i,

        GT3_TXUSRCLK_OUT                =>      gt3_txusrclk_i,
        GT3_TXUSRCLK2_OUT               =>      gt3_txusrclk2_i,
        GT3_RXUSRCLK_OUT                =>      gt3_rxusrclk_i,
        GT3_RXUSRCLK2_OUT               =>      gt3_rxusrclk2_i,

        --_____________________________________________________________________
        --_____________________________________________________________________
        --GT0  (X1Y36)

        ------------------------------- Loopback Ports -----------------------------
        gt0_loopback_in                 =>      gt0_loopback_i,
        --------------------- RX Initialization and Reset Ports --------------------
        gt0_eyescanreset_in             =>      tied_to_ground_i,
        gt0_rxuserrdy_in                =>      tied_to_ground_i,
        -------------------------- RX Margin Analysis Ports ------------------------
        gt0_eyescandataerror_out        =>      gt0_eyescandataerror_i,
        gt0_eyescantrigger_in           =>      tied_to_ground_i,
        ------------------- Receive Ports - Digital Monitor Ports ------------------
        gt0_dmonitorout_out             =>      gt0_dmonitorout_i,
        ------------------ Receive Ports - FPGA RX interface Ports -----------------
        gt0_rxdata_out                  =>      gt0_rxdata_r,
        ------------------- Receive Ports - Pattern Checker Ports ------------------
        gt0_rxprbserr_out               =>      gt0_rxprbserr_i,
        gt0_rxprbssel_in                =>      gt0_rxprbssel_i,
        ------------------- Receive Ports - Pattern Checker ports ------------------
        gt0_rxprbscntreset_in           =>      gt0_rxprbscntreset_i,
        ------------------------ Receive Ports - RX AFE Ports ----------------------
        gt0_gthrxn_in                   =>      ETH1_RX_N,
        --------------------- Receive Ports - RX Equalizer Ports -------------------
        gt0_rxmonitorout_out            =>      gt0_rxmonitorout_i,
        gt0_rxmonitorsel_in             =>      gt0_rxmonitorsel_i,
        ---------------------- Receive Ports - RX Gearbox Ports --------------------
        gt0_rxdatavalid_out             =>      gt0_rxdatavalid_i,
        gt0_rxheader_out                =>      gt0_rxheader_r,
        gt0_rxheadervalid_out           =>      gt0_rxheadervalid_i,
        --------------------- Receive Ports - RX Gearbox Ports  --------------------
        gt0_rxgearboxslip_in            =>      gt0_rxgearboxslip_i,
        ------------- Receive Ports - RX Initialization and Reset Ports ------------
        gt0_gtrxreset_in                =>      soft_reset_i,
        ------------------------ Receive Ports -RX AFE Ports -----------------------
        gt0_gthrxp_in                   =>      ETH1_RX_P,
        -------------- Receive Ports -RX Initialization and Reset Ports ------------
        gt0_rxresetdone_out             =>      gt0_rxresetdone_i,
        --------------------- TX Initialization and Reset Ports --------------------
        gt0_gttxreset_in                =>      soft_reset_i,
        gt0_txuserrdy_in                =>      tied_to_ground_i,
        -------------- Transmit Ports - 64b66b and 64b67b Gearbox Ports ------------
        gt0_txheader_in                 =>      gt0_txheader_r,
        ------------------ Transmit Ports - Pattern Generator Ports ----------------
        gt0_txprbsforceerr_in           =>      gt0_txprbsforceerr_i,
        ------------------ Transmit Ports - TX Data Path interface -----------------
        gt0_txdata_in                   =>      gt0_txdata_r,
        ---------------- Transmit Ports - TX Driver and OOB signaling --------------
        gt0_gthtxn_out                  =>      ETH1_TX_N  ,
        gt0_gthtxp_out                  =>      ETH1_TX_P  ,
        ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        gt0_txoutclkfabric_out          =>      gt0_txoutclkfabric_i,
        gt0_txoutclkpcs_out             =>      gt0_txoutclkpcs_i,
        --------------------- Transmit Ports - TX Gearbox Ports --------------------
        gt0_txsequence_in               =>      gt0_txsequence_i,
        ------------- Transmit Ports - TX Initialization and Reset Ports -----------
        gt0_txresetdone_out             =>      gt0_txresetdone_i,
        ------------------ Transmit Ports - pattern Generator Ports ----------------
        gt0_txprbssel_in                =>      gt0_txprbssel_i,


        --_____________________________________________________________________
        --_____________________________________________________________________
        --GT1  (X1Y37)

        ------------------------------- Loopback Ports -----------------------------
        gt1_loopback_in                 =>      gt1_loopback_i,
        --------------------- RX Initialization and Reset Ports --------------------
        gt1_eyescanreset_in             =>      tied_to_ground_i,
        gt1_rxuserrdy_in                =>      tied_to_ground_i,
        -------------------------- RX Margin Analysis Ports ------------------------
        gt1_eyescandataerror_out        =>      gt1_eyescandataerror_i,
        gt1_eyescantrigger_in           =>      tied_to_ground_i,
        ------------------- Receive Ports - Digital Monitor Ports ------------------
        gt1_dmonitorout_out             =>      gt1_dmonitorout_i,
        ------------------ Receive Ports - FPGA RX interface Ports -----------------
        gt1_rxdata_out                  =>      gt1_rxdata_r,
        ------------------- Receive Ports - Pattern Checker Ports ------------------
        gt1_rxprbserr_out               =>      gt1_rxprbserr_i,
        gt1_rxprbssel_in                =>      gt1_rxprbssel_i,
        ------------------- Receive Ports - Pattern Checker ports ------------------
        gt1_rxprbscntreset_in           =>      gt1_rxprbscntreset_i,
        ------------------------ Receive Ports - RX AFE Ports ----------------------
        gt1_gthrxn_in                   =>      ETH2_RX_N,
        --------------------- Receive Ports - RX Equalizer Ports -------------------
        gt1_rxmonitorout_out            =>      gt1_rxmonitorout_i,
        gt1_rxmonitorsel_in             =>      gt1_rxmonitorsel_i,
        ---------------------- Receive Ports - RX Gearbox Ports --------------------
        gt1_rxdatavalid_out             =>      gt1_rxdatavalid_i,
        gt1_rxheader_out                =>      gt1_rxheader_r,
        gt1_rxheadervalid_out           =>      gt1_rxheadervalid_i,
        --------------------- Receive Ports - RX Gearbox Ports  --------------------
        gt1_rxgearboxslip_in            =>      gt1_rxgearboxslip_i,
        ------------- Receive Ports - RX Initialization and Reset Ports ------------
        gt1_gtrxreset_in                =>      soft_reset_i,
        ------------------------ Receive Ports -RX AFE Ports -----------------------
        gt1_gthrxp_in                   =>      ETH2_RX_P,
        -------------- Receive Ports -RX Initialization and Reset Ports ------------
        gt1_rxresetdone_out             =>      gt1_rxresetdone_i,
        --------------------- TX Initialization and Reset Ports --------------------
        gt1_gttxreset_in                =>      soft_reset_i,
        gt1_txuserrdy_in                =>      tied_to_ground_i,
        -------------- Transmit Ports - 64b66b and 64b67b Gearbox Ports ------------
        gt1_txheader_in                 =>      gt1_txheader_r,
        ------------------ Transmit Ports - Pattern Generator Ports ----------------
        gt1_txprbsforceerr_in           =>      gt1_txprbsforceerr_i,
        ------------------ Transmit Ports - TX Data Path interface -----------------
        gt1_txdata_in                   =>      gt1_txdata_r,
        ---------------- Transmit Ports - TX Driver and OOB signaling --------------
        gt1_gthtxn_out                  =>      ETH2_TX_N,
        gt1_gthtxp_out                  =>      ETH2_TX_P,
        ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        gt1_txoutclkfabric_out          =>      gt1_txoutclkfabric_i,
        gt1_txoutclkpcs_out             =>      gt1_txoutclkpcs_i,
        --------------------- Transmit Ports - TX Gearbox Ports --------------------
        gt1_txsequence_in               =>      gt1_txsequence_i,
        ------------- Transmit Ports - TX Initialization and Reset Ports -----------
        gt1_txresetdone_out             =>      gt1_txresetdone_i,
        ------------------ Transmit Ports - pattern Generator Ports ----------------
        gt1_txprbssel_in                =>      gt1_txprbssel_i,


        --_____________________________________________________________________
        --_____________________________________________________________________
        --GT2  (X1Y38)

        ------------------------------- Loopback Ports -----------------------------
        gt2_loopback_in                 =>      gt2_loopback_i,
        --------------------- RX Initialization and Reset Ports --------------------
        gt2_eyescanreset_in             =>      tied_to_ground_i,
        gt2_rxuserrdy_in                =>      tied_to_ground_i,
        -------------------------- RX Margin Analysis Ports ------------------------
        gt2_eyescandataerror_out        =>      gt2_eyescandataerror_i,
        gt2_eyescantrigger_in           =>      tied_to_ground_i,
        ------------------- Receive Ports - Digital Monitor Ports ------------------
        gt2_dmonitorout_out             =>      gt2_dmonitorout_i,
        ------------------ Receive Ports - FPGA RX interface Ports -----------------
        gt2_rxdata_out                  =>      gt2_rxdata_r,
        ------------------- Receive Ports - Pattern Checker Ports ------------------
        gt2_rxprbserr_out               =>      gt2_rxprbserr_i,
        gt2_rxprbssel_in                =>      gt2_rxprbssel_i,
        ------------------- Receive Ports - Pattern Checker ports ------------------
        gt2_rxprbscntreset_in           =>      gt2_rxprbscntreset_i,
        ------------------------ Receive Ports - RX AFE Ports ----------------------
        gt2_gthrxn_in                   =>      ETH3_RX_N,
        --------------------- Receive Ports - RX Equalizer Ports -------------------
        gt2_rxmonitorout_out            =>      gt2_rxmonitorout_i,
        gt2_rxmonitorsel_in             =>      gt2_rxmonitorsel_i,
        ---------------------- Receive Ports - RX Gearbox Ports --------------------
        gt2_rxdatavalid_out             =>      gt2_rxdatavalid_i,
        gt2_rxheader_out                =>      gt2_rxheader_r,
        gt2_rxheadervalid_out           =>      gt2_rxheadervalid_i,
        --------------------- Receive Ports - RX Gearbox Ports  --------------------
        gt2_rxgearboxslip_in            =>      gt2_rxgearboxslip_i,
        ------------- Receive Ports - RX Initialization and Reset Ports ------------
        gt2_gtrxreset_in                =>      soft_reset_i,
        ------------------------ Receive Ports -RX AFE Ports -----------------------
        gt2_gthrxp_in                   =>      ETH3_RX_P,
        -------------- Receive Ports -RX Initialization and Reset Ports ------------
        gt2_rxresetdone_out             =>      gt2_rxresetdone_i,
        --------------------- TX Initialization and Reset Ports --------------------
        gt2_gttxreset_in                =>      soft_reset_i,
        gt2_txuserrdy_in                =>      tied_to_ground_i,
        -------------- Transmit Ports - 64b66b and 64b67b Gearbox Ports ------------
        gt2_txheader_in                 =>      gt2_txheader_r,
        ------------------ Transmit Ports - Pattern Generator Ports ----------------
        gt2_txprbsforceerr_in           =>      gt2_txprbsforceerr_i,
        ------------------ Transmit Ports - TX Data Path interface -----------------
        gt2_txdata_in                   =>      gt2_txdata_r,
        ---------------- Transmit Ports - TX Driver and OOB signaling --------------
        gt2_gthtxn_out                  =>      ETH3_TX_N,
        gt2_gthtxp_out                  =>      ETH3_TX_P,
        ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        gt2_txoutclkfabric_out          =>      gt2_txoutclkfabric_i,
        gt2_txoutclkpcs_out             =>      gt2_txoutclkpcs_i,
        --------------------- Transmit Ports - TX Gearbox Ports --------------------
        gt2_txsequence_in               =>      gt2_txsequence_i,
        ------------- Transmit Ports - TX Initialization and Reset Ports -----------
        gt2_txresetdone_out             =>      gt2_txresetdone_i,
        ------------------ Transmit Ports - pattern Generator Ports ----------------
        gt2_txprbssel_in                =>      gt2_txprbssel_i,


        --_____________________________________________________________________
        --_____________________________________________________________________
        --GT3  (X1Y39)

        ------------------------------- Loopback Ports -----------------------------
        gt3_loopback_in                 =>      gt3_loopback_i,
        --------------------- RX Initialization and Reset Ports --------------------
        gt3_eyescanreset_in             =>      tied_to_ground_i,
        gt3_rxuserrdy_in                =>      tied_to_ground_i,
        -------------------------- RX Margin Analysis Ports ------------------------
        gt3_eyescandataerror_out        =>      gt3_eyescandataerror_i,
        gt3_eyescantrigger_in           =>      tied_to_ground_i,
        ------------------- Receive Ports - Digital Monitor Ports ------------------
        --gt3_dmonitorout_out             =>      gt3_dmonitorout_i,
        ------------------ Receive Ports - FPGA RX interface Ports -----------------
        gt3_rxdata_out                  =>      gt3_rxdata_r,
        ------------------- Receive Ports - Pattern Checker Ports ------------------
        gt3_rxprbserr_out               =>      gt3_rxprbserr_i,
        gt3_rxprbssel_in                =>      gt3_rxprbssel_i,
        ------------------- Receive Ports - Pattern Checker ports ------------------
        gt3_rxprbscntreset_in           =>      gt3_rxprbscntreset_i,
        ------------------------ Receive Ports - RX AFE Ports ----------------------
        gt3_gthrxn_in                   =>      ETH4_RX_N,
        --------------------- Receive Ports - RX Equalizer Ports -------------------
        gt3_rxmonitorout_out            =>      gt3_rxmonitorout_i,
        gt3_rxmonitorsel_in             =>      gt3_rxmonitorsel_i,
        ---------------------- Receive Ports - RX Gearbox Ports --------------------
        gt3_rxdatavalid_out             =>      gt3_rxdatavalid_i,
        gt3_rxheader_out                =>      gt3_rxheader_r,
        gt3_rxheadervalid_out           =>      gt3_rxheadervalid_i,
        --------------------- Receive Ports - RX Gearbox Ports  --------------------
        gt3_rxgearboxslip_in            =>      gt3_rxgearboxslip_i,
        ------------- Receive Ports - RX Initialization and Reset Ports ------------
        gt3_gtrxreset_in                =>      soft_reset_i,
        ------------------------ Receive Ports -RX AFE Ports -----------------------
        gt3_gthrxp_in                   =>      ETH4_RX_P,
        -------------- Receive Ports -RX Initialization and Reset Ports ------------
        gt3_rxresetdone_out             =>      gt3_rxresetdone_i,
        --------------------- TX Initialization and Reset Ports --------------------
        gt3_gttxreset_in                =>      soft_reset_i,
        gt3_txuserrdy_in                =>      tied_to_ground_i,
        -------------- Transmit Ports - 64b66b and 64b67b Gearbox Ports ------------
        gt3_txheader_in                 =>      gt3_txheader_r,
        ------------------ Transmit Ports - Pattern Generator Ports ----------------
        gt3_txprbsforceerr_in           =>      gt3_txprbsforceerr_i,
        ------------------ Transmit Ports - TX Data Path interface -----------------
        gt3_txdata_in                   =>      gt3_txdata_r,
        ---------------- Transmit Ports - TX Driver and OOB signaling --------------
        gt3_gthtxn_out                  =>      ETH4_TX_N,
        gt3_gthtxp_out                  =>      ETH4_TX_P,
        ----------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        gt3_txoutclkfabric_out          =>      gt3_txoutclkfabric_i,
        gt3_txoutclkpcs_out             =>      gt3_txoutclkpcs_i,
        --------------------- Transmit Ports - TX Gearbox Ports --------------------
        gt3_txsequence_in               =>      gt3_txsequence_i,
        ------------- Transmit Ports - TX Initialization and Reset Ports -----------
        gt3_txresetdone_out             =>      gt3_txresetdone_i,
        ------------------ Transmit Ports - pattern Generator Ports ----------------
        gt3_txprbssel_in                =>      gt3_txprbssel_i,



    --____________________________COMMON PORTS________________________________
        GT0_QPLLLOCK_OUT => open,
        GT0_QPLLREFCLKLOST_OUT  => open,
        GT0_QPLLOUTCLK_OUT  => open,
        GT0_QPLLOUTREFCLK_OUT => open,
        sysclk_in => q8_clk0_refclk_g_i

    );


        BUFG_REFCLK : BUFG
        port map
        (
            I    => q8_clk0_refclk_i,
            O    => q8_clk0_refclk_g_i
        );

        IBUFDS_SYSCLK : IBUFDS
        port map
         (
            I  => SYSCLK_IN_P,
            IB => SYSCLK_IN_N,
            O  => sysclk_i
         );
--        IBUFGDS_SYSCLK : IBUFGDS
--        generic map (
--            DIFF_TERM => TRUE, -- Differential Termination
--            IBUF_LOW_PWR => FALSE -- Low power (TRUE) vs. performance (FALSE) setting for refernced I/O standards
--        )
--        port map (
--            O => sysclk_i, -- Clock buffer output
--            I => SYSCLK_IN_P, -- Diff_p clock buffer input (connect directly to top-level port)
--            IB => SYSCLK_IN_N -- Diff_n clock buffer input (connect directly to top-level port)
--        );
        BUFG_SYSCLK : BUFG
         port map
         (
             I    => sysclk_i,
             O    => sysclk_g_i
         );
--       BUFR_inst : BUFR
--       generic map (
--          BUFR_DIVIDE => "2",   -- Values: "BYPASS, 1, 2, 3, 4, 5, 6, 7, 8"
--          SIM_DEVICE => "7SERIES"  -- Must be set to "7SERIES"
--       )
--       port map (
--          O => drpclk_i,     -- 1-bit output: Clock output port
--          CE => '1',   -- 1-bit input: Active high, clock enable (Divided modes only)
--          CLR => '0', -- 1-bit input: Active high, asynchronous clear (Divided modes only)
--          I => sysclk_i      -- 1-bit input: Clock buffer input driven by an IBUF, MMCM or local interconnect
--       );

        -- Divisor de clock para geraÃ§Ã£o do DRP CLOCK de 100MHz

        process(sysclk_g_i)
        begin
            if rising_edge(sysclk_g_i) then
                drpclk_i <= not drpclk_i;
            end if;
        end process;



    global_reset : process(sysclk_g_i, global_reset_i)
        variable counter : integer;
        begin
            if global_reset_i = '1' then
                counter := 0;
                soft_reset_i  <= '1';
                reset_i2c   <= '1';
            elsif rising_edge(sysclk_g_i) then

                if counter < 800 then
                counter := counter + 1;
                end if;
                if counter = 400 then
                    soft_reset_i <= '0';
                elsif
                    counter = 800 then
                    reset_i2c <= '0';
                end if;
            end if;
        end process;

-------------------------------------------------------------------------------
----------------------------- Debug Signals assignment -----------------------

    ------------ optional Ports assignments --------------
    gt0_rxprbscntreset_i                         <= tied_to_ground_i;
    gt0_rxmonitorsel_i                           <= (others => '0');
    gt0_rxprbssel_i                              <= (others => '0');
    gt0_loopback_i                               <= (others => '0');
    gt0_txprbsforceerr_i                         <= tied_to_ground_i;
    gt0_txprbssel_i                              <= (others => '0');

    gt1_rxprbscntreset_i                         <= tied_to_ground_i;
    gt1_rxmonitorsel_i                           <= (others => '0');
    gt1_rxprbssel_i                              <= (others => '0');
    gt1_loopback_i                               <= (others => '0');
    gt1_txprbsforceerr_i                         <= tied_to_ground_i;
    gt1_txprbssel_i                              <= (others => '0');

    gt2_rxprbscntreset_i                         <= tied_to_ground_i;
    gt2_rxmonitorsel_i                           <= (others => '0');
    gt2_rxprbssel_i                              <= (others => '0');
    gt2_loopback_i                               <= (others => '0');
    gt2_txprbsforceerr_i                         <= tied_to_ground_i;
    gt2_txprbssel_i                              <= (others => '0');

    gt3_rxprbscntreset_i                         <= tied_to_ground_i;
    gt3_rxmonitorsel_i                           <= (others => '0');
    gt3_rxprbssel_i                              <= (others => '0');
    gt3_loopback_i                               <= (others => '0');
    gt3_txprbsforceerr_i                         <= tied_to_ground_i;
    gt3_txprbssel_i                              <= (others => '0');
    ------------------------------------------------------
    ------------------------------------------------------

    --  Static Signal Assigments
    tied_to_ground_i                             <= '0';
    tied_to_ground_vec_i                         <= x"0000000000000000";
    tied_to_vcc_i                                <= '1';
    tied_to_vcc_vec_i                            <= "11111111";


    -- ETH1 Led Assignments
--    ETH1_LED(0) <= (not ETH1_RX_LOS) and gt0_linkstatus_i and (not ETH1_TX_FAULT);
--    ETH1_LED(1) <= not ETH1_MOD_DETECT; -- MOD_DETECTED is asserted high when module absent
    -- ETH2 Led Assignments
--    ETH2_LED(0) <= (not ETH2_RX_LOS) and gt1_linkstatus_i and (not ETH2_TX_FAULT);
--    ETH2_LED(1) <= not ETH2_MOD_DETECT; -- MOD_DETECTED is asserted high when module absent
--    -- ETH3 Led Assignments
--    ETH3_LED(0) <= (not ETH3_RX_LOS) and gt2_linkstatus_i and (not ETH3_TX_FAULT);
--    ETH3_LED(1) <= not ETH3_MOD_DETECT; -- MOD_DETECTED is asserted high when module absent
--    -- ETH4 Led Assignments
--    ETH4_LED(0) <= (not ETH4_RX_LOS) and gt3_linkstatus_i and (not ETH4_TX_FAULT);
--    ETH4_LED(1) <= not ETH4_MOD_DETECT; -- MOD_DETECTED is asserted high when module absent

    -- SFP Configuration for high speed opetarion
    ETH1_RS <= "11";
    ETH2_RS <= "11";
    ETH3_RS <= "11";
    ETH4_RS <= "11";

    -- Disable SFP
    ETH1_TX_DISABLE <= tied_to_ground_i;
    ETH2_TX_DISABLE <= tied_to_ground_i;
    ETH3_TX_DISABLE <= tied_to_ground_i;
    ETH4_TX_DISABLE <= tied_to_ground_i;


    -- SI5324 and I2C MUX resets
    I2C_MUX_RESET <= tied_to_ground_i;
    SFP_CLK_RST   <= tied_to_ground_i;

    -- GLOBAL RESET

    global_reset_i <= BTN(0);

    --Drives the very slow blink clock


    blink_driver_inst: blink_driver
    generic map(
        REG_SIZE => REG_SIZE
    )
    port map(
        clk => q8_clk0_refclk_g_i,
        blink => blink,
        reset => soft_reset_i
    );

    led_driver_inst_1: led_driver
    port map(
       clk => q8_clk0_refclk_g_i,
       blink => blink,
       has_link => (not (ETH1_MOD_DETECT or ETH1_RX_LOS or ETH1_TX_FAULT)),
       on_frame_sent => on_frame_sent_1,
       on_frame_received => on_frame_received_1,
       led => ETH1_LED
    );

    led_driver_inst_2: led_driver
    port map(
       clk => q8_clk0_refclk_g_i,
       blink => blink,
       has_link => (not (ETH2_MOD_DETECT or ETH2_RX_LOS or ETH2_TX_FAULT)),
       on_frame_sent => on_frame_sent_2,
       on_frame_received => on_frame_received_2,
       led => ETH2_LED
    );

    led_driver_inst_3: led_driver
    port map(
       clk => q8_clk0_refclk_g_i,
       blink => blink,
       has_link => (not (ETH3_MOD_DETECT or ETH3_RX_LOS or ETH3_TX_FAULT)),
       on_frame_sent => on_frame_sent_3,
       on_frame_received => on_frame_received_3,
       led => ETH3_LED
    );
    led_driver_inst_4: led_driver
    port map(
       clk => q8_clk0_refclk_g_i,
       blink => blink,
       has_link => (not (ETH4_MOD_DETECT or ETH4_RX_LOS or ETH4_TX_FAULT)),
       on_frame_sent => on_frame_sent_4,
       on_frame_received => on_frame_received_4,
       led => ETH4_LED
    );
end top;
